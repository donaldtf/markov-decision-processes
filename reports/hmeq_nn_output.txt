Best parameters set found on development set:

{'alpha': 0.001, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 1}

Grid scores on development set:

0.173 (+/-0.300) for {'alpha': 0.1, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 0}
0.268 (+/-0.196) for {'alpha': 0.1, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 1}
0.173 (+/-0.300) for {'alpha': 0.1, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 0}
0.268 (+/-0.196) for {'alpha': 0.1, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 1}
0.275 (+/-0.078) for {'alpha': 0.1, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 0}
0.236 (+/-0.035) for {'alpha': 0.1, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 1}
0.275 (+/-0.078) for {'alpha': 0.1, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 0}
0.236 (+/-0.035) for {'alpha': 0.1, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 1}
0.210 (+/-0.051) for {'alpha': 0.1, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 0}
0.229 (+/-0.089) for {'alpha': 0.1, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 1}
0.210 (+/-0.051) for {'alpha': 0.1, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 0}
0.229 (+/-0.089) for {'alpha': 0.1, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 1}
0.208 (+/-0.157) for {'alpha': 0.1, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 0}
0.241 (+/-0.153) for {'alpha': 0.1, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 1}
0.208 (+/-0.157) for {'alpha': 0.1, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 0}
0.241 (+/-0.153) for {'alpha': 0.1, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 1}
0.288 (+/-0.193) for {'alpha': 0.1, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 0}
0.292 (+/-0.129) for {'alpha': 0.1, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 1}
0.288 (+/-0.193) for {'alpha': 0.1, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 0}
0.292 (+/-0.129) for {'alpha': 0.1, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 1}
0.225 (+/-0.203) for {'alpha': 0.01, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 0}
0.332 (+/-0.312) for {'alpha': 0.01, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 1}
0.225 (+/-0.203) for {'alpha': 0.01, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 0}
0.332 (+/-0.312) for {'alpha': 0.01, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 1}
0.279 (+/-0.080) for {'alpha': 0.01, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 0}
0.241 (+/-0.038) for {'alpha': 0.01, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 1}
0.279 (+/-0.080) for {'alpha': 0.01, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 0}
0.241 (+/-0.038) for {'alpha': 0.01, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 1}
0.211 (+/-0.053) for {'alpha': 0.01, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 0}
0.177 (+/-0.086) for {'alpha': 0.01, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 1}
0.211 (+/-0.053) for {'alpha': 0.01, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 0}
0.177 (+/-0.086) for {'alpha': 0.01, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 1}
0.312 (+/-0.283) for {'alpha': 0.01, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 0}
0.339 (+/-0.205) for {'alpha': 0.01, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 1}
0.312 (+/-0.283) for {'alpha': 0.01, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 0}
0.339 (+/-0.205) for {'alpha': 0.01, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 1}
0.200 (+/-0.153) for {'alpha': 0.01, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 0}
0.231 (+/-0.104) for {'alpha': 0.01, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 1}
0.200 (+/-0.153) for {'alpha': 0.01, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 0}
0.231 (+/-0.104) for {'alpha': 0.01, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 1}
0.331 (+/-0.141) for {'alpha': 0.001, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 0}
0.443 (+/-0.357) for {'alpha': 0.001, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 1}
0.331 (+/-0.141) for {'alpha': 0.001, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 0}
0.443 (+/-0.357) for {'alpha': 0.001, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 1}
0.276 (+/-0.072) for {'alpha': 0.001, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 0}
0.241 (+/-0.039) for {'alpha': 0.001, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 1}
0.276 (+/-0.072) for {'alpha': 0.001, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 0}
0.241 (+/-0.039) for {'alpha': 0.001, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 1}
0.208 (+/-0.058) for {'alpha': 0.001, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 0}
0.210 (+/-0.175) for {'alpha': 0.001, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 1}
0.208 (+/-0.058) for {'alpha': 0.001, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 0}
0.210 (+/-0.175) for {'alpha': 0.001, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 1}
0.183 (+/-0.092) for {'alpha': 0.001, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 0}
0.310 (+/-0.219) for {'alpha': 0.001, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 1}
0.183 (+/-0.092) for {'alpha': 0.001, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 0}
0.310 (+/-0.219) for {'alpha': 0.001, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 1}
0.241 (+/-0.310) for {'alpha': 0.001, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 0}
0.264 (+/-0.140) for {'alpha': 0.001, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 1}
0.241 (+/-0.310) for {'alpha': 0.001, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 0}
0.264 (+/-0.140) for {'alpha': 0.001, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 1}
0.176 (+/-0.366) for {'alpha': 0.0001, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 0}
0.269 (+/-0.281) for {'alpha': 0.0001, 'hidden_layer_sizes': 10, 'max_iter': 500, 'random_state': 1}
0.176 (+/-0.366) for {'alpha': 0.0001, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 0}
0.269 (+/-0.281) for {'alpha': 0.0001, 'hidden_layer_sizes': 10, 'max_iter': 1000, 'random_state': 1}
0.275 (+/-0.078) for {'alpha': 0.0001, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 0}
0.230 (+/-0.029) for {'alpha': 0.0001, 'hidden_layer_sizes': 11, 'max_iter': 500, 'random_state': 1}
0.275 (+/-0.078) for {'alpha': 0.0001, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 0}
0.230 (+/-0.029) for {'alpha': 0.0001, 'hidden_layer_sizes': 11, 'max_iter': 1000, 'random_state': 1}
0.212 (+/-0.048) for {'alpha': 0.0001, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 0}
0.276 (+/-0.184) for {'alpha': 0.0001, 'hidden_layer_sizes': 12, 'max_iter': 500, 'random_state': 1}
0.212 (+/-0.048) for {'alpha': 0.0001, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 0}
0.276 (+/-0.184) for {'alpha': 0.0001, 'hidden_layer_sizes': 12, 'max_iter': 1000, 'random_state': 1}
0.221 (+/-0.178) for {'alpha': 0.0001, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 0}
0.313 (+/-0.219) for {'alpha': 0.0001, 'hidden_layer_sizes': 13, 'max_iter': 500, 'random_state': 1}
0.221 (+/-0.178) for {'alpha': 0.0001, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 0}
0.313 (+/-0.219) for {'alpha': 0.0001, 'hidden_layer_sizes': 13, 'max_iter': 1000, 'random_state': 1}
0.285 (+/-0.314) for {'alpha': 0.0001, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 0}
0.292 (+/-0.170) for {'alpha': 0.0001, 'hidden_layer_sizes': 14, 'max_iter': 500, 'random_state': 1}
0.285 (+/-0.314) for {'alpha': 0.0001, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 0}
0.292 (+/-0.170) for {'alpha': 0.0001, 'hidden_layer_sizes': 14, 'max_iter': 1000, 'random_state': 1}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

Train Time:  0.22684253299999924

Test Time:  0.0013722310000012783

Final Performance on Test Set
MSE: 0.19798657718120805

Accuracy Score: 80.20134228187919%

F1 Score: 0.14492753623188406

              precision    recall  f1-score   support

           0       0.81      0.98      0.89       477
           1       0.53      0.08      0.14       119

   micro avg       0.80      0.80      0.80       596
   macro avg       0.67      0.53      0.52       596
weighted avg       0.75      0.80      0.74       596


